import { withHandlers, compose } from "recompose";

// import withHandlers from recompose to create a HOC that will define yoru props .
const VulnerabilitiesGridHelper = {

    findArrayMatches: (arr1, arr2) => {
        var ret = [];
        arr1.sort();
        arr2.sort();
        for(var i = 0; i < arr1.length; i += 1) {
            if(arr2.indexOf(arr1[i]) > -1){
                ret.push(arr1[i]);
            }
        }
        return ret;
    },


  sortArrayByMatches: (arr) => {
    return arr.sort(function(a,b) {
        	// Sort by matches
          // If the first item has a higher number, move it down
          // If the first item has a lower number, move it up
          if (a.matches > b.matches) return -1;
          if (a.matches < b.matches) return 1;

          // If the matches number is the same between both items, sort by distance
          // If the first item comes first in the distance, move it up
          // Otherwise move it down
          if (parseFloat(a.distance) > parseFloat(b.distance)) return 1;
          if (parseFloat(a.distance) < parseFloat(b.distance)) return -1;
    });
  },

  addItem: ({ obj, key, value }) => {
    return {
      ...obj,
      [key]: { name: value, data: {} }
    };
  },

  removeItem: ({ obj, key }) => {
    return Object.fromEntries(Object.entries(obj).filter(([k]) => k != key));
  },

  addDataItem: ({ obj, key, value, label, parentKey }) => {
    obj[parentKey].data[key] = {
      label,
      value
    };
    return obj;
  },

  removeDataItem: ({ obj, parentKey, key }) => {
    obj[parentKey].data = Object.fromEntries(
      Object.entries(obj[parentKey].data).filter(([k]) => k != key)
    );
    return obj;
  }


}

export default VulnerabilitiesGridHelper