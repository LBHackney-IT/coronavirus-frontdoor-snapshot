@startuml
!include <awslib/AWSCommon>
!include <awslib/General/all>

!include <awslib/Database/all>

!include <awslib/Compute/all>
!include <awslib/NetworkingAndContentDelivery/all>
!include <office/Clouds/cloud>

!definelong AWSEntity(e_alias, e_label, e_techn, e_color, e_sprite, e_stereo)
rectangle "<color:e_color><$e_sprite></color>\n==e_label" <<e_stereo>> as e_alias
!enddefinelong

!define Cloud(e_alias, e_label, e_techn) AWSEntity(e_alias, e_label, e_techn, #000000, cloud, cloud)

skinparam linetype polyline
skinparam defaultTextAlignment center

skinparam rectangle {
    StereotypeFontSize 12
    BackgroundColor AWS_BG_COLOR
    BorderColor AWS_BORDER_COLOR
    BorderColor<<AWSAccount>> #000000
}

title Better Conversations AWS Architecture

rectangle "<Stage>APIs" <<AWSAccount>> as prodapi {
    CloudFront(cfDistribution, "CloudFront Distribution", "")
    together {
        APIGateway2(apigateway, "API Gateway", "")
        Lambda(application,"cf-snapshot\n==-authorizer-<stage>", "")
        DynamoDB(vulnerabilities, "cf-snapshot\n==-<stage>-referrals","")
    }
    Lambda(authoriser,"cf-snapshot\n==-authorizer-<stage>\n<&lock-locked>", "")
    DynamoDB(vulnerabilities, "cf-snapshot\n==-<stage>-referrals","")

    cfDistribution -> apigateway

    apigateway --> authoriser : " /api"
    apigateway -> application

    authoriser -> application

    application -> vulnerabilities

}

Cloud(findSupportServices,"Find Support\n==Services","")
Cloud(airtable,"Airtable","")
Cloud(govNotify,"GOV.UK\n==Notify","")

findSupportServices -[hidden]right-> airtable
airtable -[hidden]right-> govNotify

application --> findSupportServices
application --> airtable
application --> govNotify

@enduml
