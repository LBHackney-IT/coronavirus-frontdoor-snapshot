service: cf-snapshot

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  stage: ${opt:stage}
  environment:
    TABLE_NAME: '${self:service}-${self:provider.stage}-referrals'
    CONVERSATIONS_TABLE_NAME: '${self:service}-${self:provider.stage}-conversations'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: '*'

package:
  individually: true
  exclude:
    - ./**

functions:
  cf-snapshot:
    name: ${self:service}-${self:provider.stage}
    handler: router/lambda.handler
    package:
      include:
        - build/_next/**
        - next.config.js
        - node_modules/**
        - public/**
        - router/**
    events:
      - http:
          path: api/{proxy+}
          method: ANY
          authorizer: ${self:custom.authorizer.${self:service}-authorizer}
      - http: ANY /
      - http: ANY /{proxy+}
    timeout: 120
    environment:
      ENV: ${self:provider.stage}
      ALLOWED_GROUPS: ${ssm:/frontdoor-snapshot/${self:provider.stage}/allowed-groups}
      BASIC_ALLOWED_GROUPS: ${ssm:/frontdoor-snapshot/${self:provider.stage}/basic-allowed-groups}
      EXTERNAL_USER_GROUP: ${ssm:/frontdoor-snapshot/${self:provider.stage}/external-user-group}
      JWT_SECRET: ${ssm:/common/hackney-jwt-secret}
      TABLE_NAME: ${self:provider.environment.TABLE_NAME}
      CONVERSATIONS_TABLE_NAME: ${self:provider.environment.CONVERSATIONS_TABLE_NAME}
      NEXT_PUBLIC_API_URL: https://${self:custom.aliases.${self:provider.stage}}/api
      NEXT_PUBLIC_URL: https://${self:custom.aliases.${self:provider.stage}}
      AIRTABLE_API_KEY: ${ssm:/frontdoor-snapshot/airtable-api-key}
      AIRTABLE_BASE_ID: ${ssm:/frontdoor-snapshot/airtable-base-id}
      AIRTABLE_TABLE_NAMES: ${ssm:/frontdoor-snapshot/airtable-table-names}
      INH_URL: ${ssm:/frontdoor-snapshot/inh-url}
      FSS_PUBLIC_API_URL: ${ssm:/frontdoor-snapshot/${self:provider.stage}/fss-public-api-url}
      REFERRAL_EMAIL_TEMPLATE_ID: ${ssm:/frontdoor-snapshot/referral-email-template-id}
      REFERRAL_RECEIPT_EMAIL_TEMPLATE_ID: ${ssm:/frontdoor-snapshot/referral-email-receipt-template-id}
      REFERRAL_RESIDENT_EMAIL_TEMPLATE_ID: ${ssm:/frontdoor-snapshot/referral-resident-email-template-id}
      SIGNPOST_EMAIL_TEMPLATE_ID: ${ssm:/frontdoor-snapshot/signpost-email-template-id}
      SIGNPOST_LETTER_TEMPLATE_ID: ${ssm:/frontdoor-snapshot/signpost-letter-template-id}
      REFERRAL_RESIDENT_SMS_TEMPLATE_ID: ${ssm:/frontdoor-snapshot/referral-resident-sms-template-id}
      GOV_NOTIFY_API_KEY: ${ssm:/frontdoor-snapshot/gov-notify-api-key}
      NEXT_PUBLIC_ENV: ${self:provider.stage}

  cf-snapshot-authorizer:
    name: ${self:service}-authorizer-${self:provider.stage}
    handler: authorizer.handler
    package:
      include:
        - authorizer.js
        - node_modules/**
    environment:
      BASIC_ALLOWED_GROUPS: ${ssm:/frontdoor-snapshot/${self:provider.stage}/basic-allowed-groups}
      JWT_SECRET: ${ssm:/common/hackney-jwt-secret}

resources:
  Resources:
    VulnerabilitiesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: queryLastName
            AttributeType: S
          - AttributeName: queryFirstName
            AttributeType: S
        GlobalSecondaryIndexes:
          - IndexName: NamesIndex
            KeySchema:
              - AttributeName: queryLastName
                KeyType: HASH
              - AttributeName: queryFirstName
                KeyType: RANGE
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - id
                - systemIds
    ConversationsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.CONVERSATIONS_TABLE_NAME}
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: queryLastName
            AttributeType: S
          - AttributeName: queryFirstName
            AttributeType: S
        GlobalSecondaryIndexes:
          - IndexName: NamesIndex
            KeySchema:
              - AttributeName: queryLastName
                KeyType: HASH
              - AttributeName: queryFirstName
                KeyType: RANGE
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - id
                - systemIds
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - ${self:custom.aliases.${self:provider.stage}}
          PriceClass: PriceClass_100
          ViewerCertificate:
            AcmCertificateArn: ${env:AWS_CERTIFICATE_ARN}
            MinimumProtocolVersion: TLSv1.2_2018
            SslSupportMethod: sni-only
          DefaultCacheBehavior:
            TargetOriginId: ${self:service}-${self:provider.stage}-custom-origin
            ViewerProtocolPolicy: 'redirect-to-https'
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            ForwardedValues:
              QueryString: true
              Headers:
                - Authorization
              Cookies:
                Forward: all
          Enabled: true
          Origins:
            - Id: ${self:service}-${self:provider.stage}-custom-origin
              DomainName: ${self:custom.domain-name}
              OriginPath: /${self:provider.stage}
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
    ApiMetricFilter:
      Type: AWS::Logs::MetricFilter
      Properties:
        FilterPattern: 'Error'
        LogGroupName: '/aws/lambda/${self:service}-${self:provider.stage}'
        MetricTransformations:
          - MetricName: 'errors-${self:provider.stage}'
            MetricNamespace: ErrorLogs
            MetricValue: '1'
    FrontdoorLambdaErrorAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmDescription: Errors detected at better conversations lambda
        Namespace: ErrorLogs
        MetricName: 'errors-${self:provider.stage}'
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 3600
        AlarmActions:
          - Ref: TopicCloudwatchAlarm
    TopicCloudwatchAlarm:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:service}-${self:provider.stage}-topic-cloudwatch-alarm
    TopicCloudwatchAlarmSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: ${ssm:/frontdoor-snapshot/alarm-subscription-email}
        Protocol: email
        TopicArn:
          Ref: TopicCloudwatchAlarm

custom:
  authorizer:
    cf-snapshot-authorizer:
      name: ${self:service}-authorizer
      type: request
      identitySource: ''
      resultTtlInSeconds: 0
  domain-name:
    Fn::Join:
      - '.'
      - - Ref: ApiGatewayRestApi
        - execute-api
        - eu-west-2
        - amazonaws.com
  aliases:
    staging: frontdoor-snapshot-staging.hackney.gov.uk
    production: frontdoor-snapshot.hackney.gov.uk
